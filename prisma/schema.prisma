generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Driver {
  id        String     @id @default(uuid())
  firstName String
  lastName  String
  base      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  vacations Vacation[] // Relation to vacations
  absences  Absence[]  // Relation to absences
}

model Vacation {
  id             String   @id @default(uuid())
  driverId       String   // Foreign key to Driver
  driver         Driver   @relation(fields: [driverId], references: [id])
  startDate      DateTime
  endDate        DateTime
  approvalStatus String   // "angefragt" or "best√§tigt"
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Absence {
  id             String   @id @default(uuid())
  driverId       String   // Foreign key to Driver
  driver         Driver   @relation(fields: [driverId], references: [id])
  startDate      DateTime
  startTime      String?  // Optional time for start
  startPeriod    String?  // "Ganzer Tag", "Vormittag", "Nachmittag"
  endDate        DateTime?
  endTime        String?  // Optional time for end
  endPeriod      String?  // "Ganzer Tag", "Vormittag", "Nachmittag"
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
        
